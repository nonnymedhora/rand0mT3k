1 The Family of Map-Reduce

The MapReduce framework is introduced as a simple and powerful programming
model that enables easy development of scalable parallel applications which can
process vast amounts of data on large clusters of commodity machines.

In particular, the framework is mainly designed to achieve high performance on
large clusters of commodity PCs. One of the main advantages of this approach is
that it isolates the application from the details of running a distributed program,
such as issues on data distribution, scheduling and fault tolerance. In this model,
the computation takes a set of input key/value pairs and produces a set of output
key/value pairs.

The user of the MapReduce framework expresses the computation using two
functions: Map and Reduce. The Map function takes an input pair and produces a
set of intermediate key/value pairs. The MapReduce framework groups together all
intermediate values associated with the same intermediate key I and passes them
to the Reduce function. 

The Reduce function receives an intermediate key I with
its set of values and merges them together. Typically just zero or one output value
is produced per Reduce invocation. The main advantage of this model is that it
allows large computations to be easily parallelized and re-executed to be used as the
primary mechanism for fault tolerance